{"version":3,"sources":["serviceWorker.js","swapi/planets.js","swapi/person.js","swapi/starships.js","swapi/films.js","swapi/species.js","swapi/vehicles.js","swapi/swapi.js","index.js","logo.svg"],"names":["Boolean","window","location","hostname","match","Planets","Component","state","pictures","persons","componentDidMount","fetch","then","results","json","data","map","pic","key","name","climate","gravity","population","terrain","setState","console","log","className","this","Starships","model","crew","passengers","hyperdrive_rating","starship_class","created","Films","height","mass","hair_color","eye_color","birth_year","gender","Species","classification","designation","language","average_lifespan","Vehicles","manufacturer","cargo_capacity","vehicle_class","Home","About","Dashboard","Swapi","width","src","alt","class","id","to","exact","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.4684ffb4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\r\n\r\n\r\n\r\n\r\nclass Planets extends Component {\r\n\r\n    state = { pictures: [], persons: [] };\r\n\r\n\r\n\r\n    componentDidMount = () => {\r\n\r\n        fetch('https://swapi.co/api/planets/').then(results => {\r\n            return results.json();\r\n        }).then(data => {\r\n            let pictures = data.results.map((pic) => {\r\n                return (\r\n                    <div key={pic.results}>\r\n\r\n                        <table>\r\n                            <tr>\r\n                                <th>{pic.name}</th>\r\n\r\n\r\n                                <td>{pic.climate}</td>\r\n\r\n\r\n                                <td>{pic.gravity}</td>\r\n\r\n\r\n                                <td>{pic.population}</td>\r\n\r\n\r\n                                <td>{pic.terrain}</td>\r\n\r\n\r\n                            </tr>\r\n                        </table>\r\n\r\n                    </div>\r\n                )\r\n            })\r\n            this.setState({ pictures: pictures });\r\n            console.log(\"state\", this.state.pictures)\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"contain\">\r\n                <div className=\"header\">\r\n                    <table>\r\n                        <tr>\r\n                            <th>Name</th>\r\n\r\n\r\n                            <th>Climate</th>\r\n\r\n\r\n                            <th>Gravity</th>\r\n\r\n\r\n                            <th>Population</th>\r\n\r\n\r\n                            <th>Terrain</th>\r\n\r\n\r\n\r\n\r\n                        </tr>\r\n                    </table>\r\n                    {this.state.pictures}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Planets;","import React, { Component } from \"react\";\r\n\r\n\r\n\r\n\r\nclass Person extends Component {\r\n\r\n    state = { pictures: [], persons: [] };\r\n\r\n\r\n\r\n    componentDidMount = () => {\r\n\r\n        fetch('https://swapi.co/api/people/').then(results => {\r\n            return results.json();\r\n        }).then(data => {\r\n            let pictures = data.results.map((pic) => {\r\n                return (\r\n                    <div key={pic.results}>\r\n\r\n                        <table>\r\n                            <tr>\r\n                                <th>{pic.name}</th>\r\n\r\n\r\n                                <td>{pic.height}</td>\r\n\r\n\r\n                                <td>{pic.mass}</td>\r\n\r\n\r\n                                <td>{pic.hair_color}</td>\r\n\r\n\r\n                                <td>{pic.eye_color}</td>\r\n\r\n\r\n                                <td>{pic.birth_year}</td>\r\n\r\n\r\n                                <td>{pic.gender}</td>\r\n\r\n                            </tr>\r\n                        </table>\r\n\r\n                    </div>\r\n                )\r\n            })\r\n            this.setState({ pictures: pictures });\r\n            console.log(\"state\", this.state.pictures)\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"contain\">\r\n                <div className=\"header\">\r\n                    <table>\r\n                        <tr>\r\n                            <th>Name</th>\r\n\r\n\r\n                            <th>Height</th>\r\n\r\n\r\n                            <th>Mass</th>\r\n\r\n\r\n                            <th>Hair Color</th>\r\n\r\n\r\n                            <th>Eye Color</th>\r\n\r\n\r\n                            <th>Birth Year</th>\r\n\r\n\r\n                            <th>Gender</th>\r\n\r\n                        </tr>\r\n                    </table>\r\n                    {this.state.pictures}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Person;","import React, { Component } from \"react\";\r\n\r\n\r\n\r\n\r\nclass Starships extends Component {\r\n\r\n    state = { pictures: [], persons: [] };\r\n\r\n\r\n\r\n    componentDidMount = () => {\r\n\r\n        fetch('https://swapi.co/api/starships/').then(results => {\r\n            return results.json();\r\n        }).then(data => {\r\n            let pictures = data.results.map((pic) => {\r\n                return (\r\n                    <div key={pic.results}>\r\n\r\n                        <table>\r\n                            <tr>\r\n                                <th>{pic.name}</th>\r\n\r\n\r\n                                <td>{pic.model}</td>\r\n\r\n\r\n                                <td>{pic.crew}</td>\r\n\r\n\r\n                                <td>{pic.passengers}</td>\r\n\r\n\r\n                                <td>{pic.hyperdrive_rating}</td>\r\n\r\n\r\n                                <td>{pic.starship_class}</td>\r\n\r\n\r\n                                <td>{pic.created}</td>\r\n\r\n                            </tr>\r\n                        </table>\r\n\r\n                    </div>\r\n                )\r\n            })\r\n            this.setState({ pictures: pictures });\r\n            console.log(\"state\", this.state.pictures)\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"contain\">\r\n                <div className=\"header\">\r\n                    <table>\r\n                        <tr>\r\n                            <th>Name</th>\r\n\r\n\r\n                            <th>Model</th>\r\n\r\n\r\n                            <th>Crew</th>\r\n\r\n\r\n                            <th>Passengers</th>\r\n\r\n\r\n                            <th>Hyperdrive Rating</th>\r\n\r\n\r\n                            <th>Starship class</th>\r\n\r\n\r\n                            <th>Created</th>\r\n\r\n                        </tr>\r\n                    </table>\r\n                    {this.state.pictures}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Starships;","import React, { Component } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { Button } from \"antd\";\r\nimport { Input, Table } from \"antd\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\n\r\n\r\nclass Films extends Component {\r\n\r\n    state = { pictures: [], persons: [] };\r\n\r\n\r\n\r\n    componentDidMount = () => {\r\n\r\n        fetch('https://swapi.co/api/films/').then(results => {\r\n            return results.json();\r\n        }).then(data => {\r\n            let pictures = data.results.map((pic) => {\r\n                return (\r\n                    <div key={pic.results}>\r\n\r\n                        <table>\r\n                            <tr>\r\n                                <th>{pic.name}</th>\r\n\r\n\r\n                                <td>{pic.height}</td>\r\n\r\n\r\n                                <td>{pic.mass}</td>\r\n\r\n\r\n                                <td>{pic.hair_color}</td>\r\n\r\n\r\n                                <td>{pic.eye_color}</td>\r\n\r\n\r\n                                <td>{pic.birth_year}</td>\r\n\r\n\r\n                                <td>{pic.gender}</td>\r\n\r\n                            </tr>\r\n                        </table>\r\n\r\n                    </div>\r\n                )\r\n            })\r\n            this.setState({ pictures: pictures });\r\n            console.log(\"state\", this.state.pictures)\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"contain\">\r\n                <div className=\"header\">\r\n                    <table>\r\n                        <tr>\r\n                            <th>Name</th>\r\n\r\n\r\n                            <th>Height</th>\r\n\r\n\r\n                            <th>Mass</th>\r\n\r\n\r\n                            <th>Hair Color</th>\r\n\r\n\r\n                            <th>Eye Color</th>\r\n\r\n\r\n                            <th>Birth Year</th>\r\n\r\n\r\n                            <th>Gender</th>\r\n\r\n                        </tr>\r\n                    </table>\r\n                    {this.state.pictures}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Films;","import React, { Component } from \"react\";\r\n\r\n\r\n\r\n\r\nclass Species extends Component {\r\n\r\n    state = { pictures: [], persons: [] };\r\n\r\n\r\n\r\n    componentDidMount = () => {\r\n\r\n        fetch('https://swapi.co/api/species/').then(results => {\r\n            return results.json();\r\n        }).then(data => {\r\n            let pictures = data.results.map((pic) => {\r\n                return (\r\n                    <div key={pic.results}>\r\n\r\n                        <table>\r\n                            <tr>\r\n                                <th>{pic.name}</th>\r\n\r\n\r\n                                <td>{pic.classification}</td>\r\n\r\n\r\n                                <td>{pic.designation}</td>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                <td>{pic.language}</td>\r\n\r\n\r\n                                <td>{pic.average_lifespan}</td>\r\n\r\n                            </tr>\r\n                        </table>\r\n\r\n                    </div>\r\n                )\r\n            })\r\n            this.setState({ pictures: pictures });\r\n            console.log(\"state\", this.state.pictures)\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"contain\">\r\n                <div className=\"header\">\r\n                    <table>\r\n                        <tr>\r\n                            <th>Name</th>\r\n\r\n\r\n                            <th>Classification</th>\r\n\r\n\r\n                            <th>Designation</th>\r\n\r\n\r\n                            <th>Language</th>\r\n\r\n\r\n                            <th>Average Lifespan</th>\r\n\r\n                        </tr>\r\n                    </table>\r\n                    {this.state.pictures}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Species;","import React, { Component } from \"react\";\r\n\r\n\r\n\r\n\r\nclass Vehicles extends Component {\r\n\r\n    state = { pictures: [], persons: [] };\r\n\r\n\r\n\r\n    componentDidMount = () => {\r\n\r\n        fetch('https://swapi.co/api/vehicles/').then(results => {\r\n            return results.json();\r\n        }).then(data => {\r\n            let pictures = data.results.map((pic) => {\r\n                return (\r\n                    <div key={pic.results}>\r\n\r\n                        <table>\r\n                            <tr>\r\n                                <th>{pic.name}</th>\r\n\r\n\r\n                                <td>{pic.model}</td>\r\n\r\n\r\n                                <td>{pic.manufacturer}</td>\r\n\r\n\r\n                                <td>{pic.passengers}</td>\r\n\r\n\r\n                                <td>{pic.cargo_capacity}</td>\r\n\r\n\r\n                                <td>{pic.vehicle_class}</td>\r\n\r\n\r\n\r\n                            </tr>\r\n                        </table>\r\n\r\n                    </div>\r\n                )\r\n            })\r\n            this.setState({ pictures: pictures });\r\n            console.log(\"state\", this.state.pictures)\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"contain\">\r\n                <div className=\"header\">\r\n                    <table >\r\n                        <tr>\r\n                            <th>Name</th>\r\n\r\n\r\n                            <th>Model</th>\r\n\r\n\r\n                            <th>Manufacturer</th>\r\n\r\n\r\n                            <th>Passengers</th>\r\n\r\n\r\n                            <th>Cargo_capacity</th>\r\n\r\n\r\n                            <th>Vehicle_class</th>\r\n\r\n\r\n                        </tr>\r\n                    </table>\r\n                    {this.state.pictures}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Vehicles;","import React, { Component } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport Person from './person'\r\nimport \"./swapi.css\";\r\nimport Planets from \"./planets\";\r\nimport Starships from \"./starships\";\r\nimport Films from \"./films\";\r\nimport Species from \"./species\";\r\nimport Vehicles from \"./vehicles\";\r\n\r\n\r\nclass Swapi extends Component {\r\n\r\n    state = { pictures: [], persons: [] };\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"contain\">\r\n                <div className=\"header\">\r\n\r\n\r\n                    <img\r\n                        height=\"400px\"\r\n                        width=\"100%\"\r\n                        src=\"https://store-images.s-microsoft.com/image/apps.40057.13982743944721264.aba8e5da-4441-4232-a0e1-21747a781f2b.0c0baeb1-555e-4ef5-af93-ca8b1bd633d7?mode=scale&q=90&h=720&w=1280&background=%23FFFFFF\"\r\n                        alt=\"\"\r\n                    />\r\n                    <Router>\r\n                        <div>\r\n                            <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                                <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                                    <ul class=\"navbar-nav mr-auto\"  >\r\n                                        <li class=\"nav-item\">\r\n                                            <Link class=\"nav-link\" to=\"/\">STARWARS</Link>\r\n                                        </li>\r\n                                        <li class=\"nav-item\">\r\n                                            <Link class=\"nav-link\" to=\"/character\">Characters</Link>\r\n                                        </li>\r\n                                        <li class=\"nav-item\">\r\n                                            <Link class=\"nav-link\" to=\"/about\">Planets</Link>\r\n                                        </li>\r\n                                        <li class=\"nav-item\">\r\n                                            <Link class=\"nav-link\" to=\"/dashboard\">Starships</Link>\r\n                                        </li>\r\n\r\n                                        <li class=\"nav-item\">\r\n                                            <Link class=\"nav-link\" to=\"/vehicle\">Vehicles</Link>\r\n                                        </li>\r\n                                        <li class=\"nav-item\">\r\n                                            <Link class=\"nav-link\" to=\"/specie\">Species</Link>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </nav>\r\n                            <hr />\r\n                            <Switch>\r\n                                <Route exact path=\"/\">\r\n                                    <Home />\r\n                                </Route>\r\n                                <Route path=\"/about\">\r\n                                    <About />\r\n                                </Route>\r\n                                <Route path=\"/character\">\r\n                                    <About />\r\n                                </Route>\r\n                                <Route path=\"/dashboard\">\r\n                                    <Dashboard />\r\n                                </Route>\r\n                                <Route path=\"/movies\">\r\n                                    <Films />\r\n                                </Route>\r\n                                <Route path=\"/vehicle\">\r\n                                    <Vehicles />\r\n                                </Route>\r\n                                <Route path=\"/specie\">\r\n                                    <Species />\r\n                                </Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </Router>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <h1>MAY THE FORCE BE WITH YOU</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Character() {\r\n    return (\r\n        <div>\r\n            <Person />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <Planets />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <div>\r\n            <Starships />\r\n        </div>\r\n    );\r\n}\r\nfunction Movies() {\r\n    return (\r\n        <div>\r\n            <Films />\r\n        </div>\r\n    );\r\n}\r\nfunction Specie() {\r\n    return (\r\n        <div>\r\n            <Species />\r\n        </div>\r\n    );\r\n}\r\nfunction Vehicle() {\r\n    return (\r\n        <div>\r\n            <Vehicles />\r\n        </div>\r\n    );\r\n}\r\nexport default Swapi;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Swapi from './swapi/swapi';\n\nReactDOM.render(<Swapi />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}